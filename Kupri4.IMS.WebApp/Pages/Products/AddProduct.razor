@page "/addproduct"

@inject IAddProductUseCase AddProductUseCase
@inject NavigationManager NavigationManager

<h3>Add Product</h3>


<EditForm Model="_product" OnValidSubmit="HandleValidSubmit">
 
    <FluentValidationValidator/>

    <div class="form-group">
        <label class="form-label" for="name">Inventory name</label>
        <ValidationMessage For="() => _product.Name"/>
        <InputText class="form-control" id="name" @bind-Value="_product.Name" />
    </div>

    <div class="form-group">
        <label class="form-label" for="description">Description</label>
        <ValidationMessage For="() => _product.Description"/>
        <InputText class="form-control" id="description" @bind-Value="_product.Description" />
    </div>

    <div class="form-group">
        <label class="form-label" for="price">Price</label>
        <ValidationMessage For="() => _product.Price"/>
        <InputNumber class="form-control" id="price" @bind-Value="_product.Price" />
    </div>

    <br />

    <div class="form-group">
        <ProductInventoriesComponent Product="_product" />
    </div>

    <br />

    <button type="submit" class="btn btn-outline-primary">Submit</button>

</EditForm>


@code {
    private Product _product = new();

    private async Task HandleValidSubmit()
    {

        await AddProductUseCase.ExecuteAsync(_product);
        NavigationManager.NavigateTo("/products");
    }

}
